bg = {
    line: #f0f1f3,
    primary: #09af7b,
    main: #f0f1f3,
    info: rgb(250, 143, 1),
    white: #fff,
    danger: #f05261,
    gray: #fafbfd,
    bg99: #fef0f0
};
colors = {
    primary: #09af7b,
    black: #354056,
    info: #54647d,
    success: #09af7b,
    danger: #f05261,
    remove: #fb374a,
    white: #fff,
    border: #e6e6e6
};

.d-flex {
    display: flex;
}

.flex-d {
    flex-direction: column;
}

.flex-1 {
    flex: 1;
    overflow: hidden;
}

.text-center {
    text-align: center;
}

.between {
    justify-content: space-between;
}

.h-100 {
    height: 100%;
    overflow: hidden;
}

.w-100 {
    width: 100%;
    overflow: hidden;
}

.bra {
    border-radius: 5px;
}

for key, val in bg {
    .{key} {
        background-color: val;
        color: colors['white'];
        border: 1px solid transparent;
    }

    .r{key} {
        @extend .{key};
        background-color: colors['white'];
        color: val;
        border-color: val;
    }
}

for key, val in colors {
    .{key} {
        color: val;
    }
}

for val in range(12px, 30px) {
    .fs-{val} {
        font-size: val;
    }
}

direction = {
    t: top,
    r: right,
    b: bottom,
    l: left
};
distance = {
    p: padding,
    m: margin,
    b: border
};

for i in 8 .. 20 {
    for j, item in distance {
        .{j}-{i} {
            {item}: i * 1px;
        }

        .{j}-0 {
            {item}: 0;
        }

        .{j}x-{i} {
            {item}: 0 i * 1px;
        }

        .{j}y-{i} {
            {item}: i * 1px 0;
        }

        for key, value in direction {
            .{j}{key}-{i} {
                {item}-{value}: i * 1px;
            }
        }
    }
}

@css {
    .calc{
       height:  calc(100vh - 60px);
     }
}
jc = {
    between: space-between,
    evenly: space-evenly,
    around: space-around,
    center: center,
    end: flex-end
};

.ai-center {
    align-items: center;
}

for key, val in jc {
    .{key} {
        justify-content: val;
    }
}

.iconfont {
    &.active {
        border: 1px solid colors['primary'];
        color: colors['primary'];
    }
}

$border {
    border: 1px solid colors['border'];
}

.border {
    @extend $border;
}

bor = {
    bt: border-top,
    br: border-right,
    bb: border-bottom,
    bl: border-left
};

for key, val in bor {
    .{key} {
        {val}: 1px solid colors['border'];
    }
}

.bs {
    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);
}

.sec {
    .w-100 {
        width: 100% !important;
    }
}

#app {
    .el-scrollbar__wrap {
        overflow-x: hidden;
    }
}

.w-240 {
    width: 240px;
    height: 100%;
    background: bg['primary'];
    color: #ffffff
}